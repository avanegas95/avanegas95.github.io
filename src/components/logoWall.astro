---
const technologies = [
  "selenium",
  "appium",
  "python",
  "nodejs",
  "HTML5",
  "astro",
  "react",
  "tailwindcss",
  "git",
  "supabase",
  "mysql",
  "bash",
];

const techUrls = {
  python: "https://www.python.org",
  selenium: "https://www.selenium.dev",
  next: "https://nextjs.org",
  appium: "https://appium.io",
  nodejs: "https://nodejs.org",
  HTML5: "https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5",
  astro: "https://astro.build",
  react: "https://react.dev",
  tailwindcss: "https://tailwindcss.com",
  git: "https://git-scm.com",
  supabase: "https://supabase.com",
  mysql: "https://www.mysql.com",
  bash: "https://www.gnu.org/software/bash",
};
---

<div class="relative overflow-x-hidden py-4 max-w-6xl mx-auto">
  <div
    class="pointer-events-none absolute inset-y-0 left-0 w-32 bg-gradient-to-r from-[var(--background)] to-transparent z-20"
  > 
  </div>
  <div
    class="pointer-events-none absolute inset-y-0 right-0 w-32 bg-gradient-to-l from-[var(--background)] to-transparent z-20"
  >
  </div>

  <div class="flex animate-scroll hover:animate-paused gap-12 md:gap-20 max-w-7xl mx-auto">
    {
      [...technologies, ...technologies, ...technologies].map((tech) => (
        <a
          target="_blank"
          rel="noopener noreferrer"
          class="flex items-center gap-2 group transition-all duration-300 hover:scale-110"
        >
          <img
            src={`/svg/${tech}.svg`}
            alt={tech}
            class="h-7 w-auto object-contain transition-all duration-300 group-hover:scale-110 opacity-60 group-hover:opacity-100"
            width="30"
            height="30"
            loading="lazy"
          />
          <span class="text-lg font-medium text-[var(--white-icon)] transition-colors duration-300 group-hover:text-[var(--white)]">
            {tech.charAt(0).toUpperCase() + tech.slice(1)}
          </span>
        </a>
      ))
    }
  </div>
</div>

<style is:global>
  @keyframes scroll {
    from {
      transform: translateX(0);
    }
    to {
      transform: translateX(-66.33%);
    }
  }

  .animate-scroll {
    animation: scroll 30s linear infinite;
    will-change: transform;
  }

  .animate-paused {
    animation-play-state: paused;
  }

  @media (min-width: 768px) {
    .animate-scroll {
      animation-duration: 15s;
    }
  }

  @media (prefers-reduced-motion: reduce) {
    .animate-scroll {
      animation: none;
      transform: none;
    }
  }

  /* Improve performance */
  .group {
    will-change: transform;
    backface-visibility: hidden;
  }

  /* Add smooth scrolling for touch devices */
  @media (hover: none) and (pointer: coarse) {
    .animate-scroll {
      animation-duration: 60s;
    }
  }
</style>
